@model LagunaShoreResort2.Models.SalesContract
@using LagunaShoreResort2.Models

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Client cliente = ViewBag.Client;
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Sales Contract</h4>
        <div class="panel-body row">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="dl-horizontal col-md-4">
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.client.legalName, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        <input type="hidden" id="clientID" name="clientID" class="form-control" value="@(ViewBag.clientID) " />
                        <input type="text" id="legalName" name="legalName" class="form-control" value="@(ViewBag.legalName)" readonly />
                        @*@Html.ValidationMessageFor(model => model.contractType, "", new { @class = "text-danger" })*@
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.client.secondLegalName, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        <input type="text" id="sLegalName" name="sLegalName" class="form-control" value="@(ViewBag.sLegalName) " readonly />
                        @*@Html.ValidationMessageFor(model => model.contractType, "", new { @class = "text-danger" })*@
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.contractType, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.contractType, new SelectList(SalesContract.getContractTypeArray(), "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.contractType, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.paymentsQuantity, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.paymentsQuantity, new SelectList(SalesContract.getPaymentsQuantitiesArray(), "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.paymentsQuantity, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.typeOfFraction, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.typeOfFraction, new SelectList(SalesContract.getTypeOfFractionArray(), "Value", "Text"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.typeOfFraction, "", new { @class = "text-danger" })
                    </div>
                    
                    <div id="typeOfFractiondiv" @*style="display:none;"*@>                        
                        @*<input type="text" id="typeOfFractionOther" name="typeOfFractionOther" class="form-control" placeholder="Specify Databse Type" />*@
                    </div>                  
                </fieldset>
                <fieldset class="form-group" id="yearEvenSection" style="display: none;">
                    @Html.LabelFor(model => model.yearEven, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.yearEven, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.yearEven, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.saleAmount, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.saleAmount, new { htmlAttributes = new { @class = "form-control", data_mask="0000000000.00",  data_mask_reverse="true" } })
                        @Html.ValidationMessageFor(model => model.saleAmount, "", new { @class = "text-danger" })
                    </div>
                </fieldset>      
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.deposit, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.deposit, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                            @Html.ValidationMessageFor(model => model.deposit, "", new { @class = "text-danger" })
                        </div>
                </fieldset>           
            </div>
            @if (ViewBag.previoussCN != null || ViewBag.previousTmCN != null)
            {
                <div class="dl-horizontal col-md-4" id="upgrade">
                    <fieldset class="form-group">
                        @*@Html.LabelFor(model => model.condo, htmlAttributes: new { @class = "control-label" })*@
                        <div class="col-xs-3">
                            <label class="control-label">Prev. Condo</label>
                        </div>
                        <div class="col-md-12">
                            @*<input type="hidden" id="condoID" name="condoID" class="form-control" value="@(ViewBag.condoID) " />*@
                            <input type="text" id="condoName" name="condoName" class="form-control" value="@(ViewBag.condoName)" readonly />
                            @*@Html.ValidationMessageFor(model => model.contractType, "", new { @class = "text-danger" })*@
                        </div>
                    </fieldset>
                    @if (@ViewBag.previoussCN != null)
                    {
                        <fieldset class="form-group">
                            @Html.LabelFor(model => model.previousFCID, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                <input type="text" id="previoussCN" name="previoussCN" class="form-control" value="@(ViewBag.previoussCN)" readonly />
                            </div>
                        </fieldset>
                    }
                    else
                    {
                        <fieldset class="form-group">
                            @Html.LabelFor(model => model.previousTMID, htmlAttributes: new { @class = "control-label" })
                            <div class="col-md-12">
                                <input type="text" id="previousTmCN" name="previousTmCN" class="form-control" value="@(ViewBag.previousTmCN) " readonly />
                            </div>
                        </fieldset>
                    }
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.tradeInValue, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            <input type="text" id="tradeInValue" name="tradeInValue" class="form-control" value="@(ViewBag.tradeInValue) " readonly />
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.previousBalance, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            <input type="text" id="previousBalance" name="previousBalance" class="form-control" , data_mask="0000000000.00" value="@(ViewBag.balance) " readonly />

                        </div>
                    </fieldset>
                </div>
            }
            

                <div class="dl-horizontal col-md-4">
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.interestRate, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.interestRate, new { htmlAttributes = new { @class = "form-control", data_mask = "00.00" } })
                            @Html.ValidationMessageFor(model => model.interestRate, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.deedWeeks, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.deedWeeks, new { htmlAttributes = new { @class = "form-control", data_mask = "00" } })
                            @Html.ValidationMessageFor(model => model.deedWeeks, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.bonusWeeks, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.bonusWeeks, new { htmlAttributes = new { @class = "form-control", data_mask = "00.00" } })
                            @Html.ValidationMessageFor(model => model.bonusWeeks, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.bonusWeeksExp, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">

                            @Html.EditorFor(model => model.bonusWeeksExp, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.bonusWeeksExp, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.advantageWeeks, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.advantageWeeks, new { htmlAttributes = new { @class = "form-control", data_mask = "00.00" } })
                            @Html.ValidationMessageFor(model => model.advantageWeeks, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.advantageWeeksExp, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">

                            @Html.EditorFor(model => model.advantageWeeksExp, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.advantageWeeksExp, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.closingCost, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.closingCost, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                            @Html.ValidationMessageFor(model => model.closingCost, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                </div>
                <div class="dl-horizontal col-md-4">
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.contractDate, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">

                            @Html.EditorFor(model => model.contractDate, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contractDate, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.NumberofDownPayments, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NumberofDownPayments, new { htmlAttributes = new { @class = "form-control", data_mask = "00" } })
                            @Html.ValidationMessageFor(model => model.NumberofDownPayments, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.listPrice, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.listPrice, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                            @Html.ValidationMessageFor(model => model.listPrice, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.currency, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.currency, new SelectList(SalesContract.getCurrencyArray(), "Value", "Text", "USD"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.currency, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.qualification, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.qualification, new SelectList(SalesContract.getQualificationsArray(), "Value", "Text"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.qualification, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.comments, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.comments, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.comments, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.condoID, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.DropDownList("condoID", null, "Select a condo...", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.condoID, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.InitialHOAMonth, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.InitialHOAMonth, new { htmlAttributes = new { @class = "form-control", type = "month" } })
                            @Html.ValidationMessageFor(model => model.InitialHOAMonth, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                    <fieldset class="form-group">
                        @Html.LabelFor(model => model.HOAYearlyPayment, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.HOAYearlyPayment, new { htmlAttributes = new { @class = "form-control", data_mask = "0000000000.00", data_mask_reverse = "true" } })
                            @Html.ValidationMessageFor(model => model.HOAYearlyPayment, "", new { @class = "text-danger" })
                        </div>
                    </fieldset>
                </div>

            </div>
        <div class="panel-body row">
            <!--Attachments in spanish selector-->
            <div class="col-md-6">
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.attachmentsSpanish, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.attachmentsSpanish, new { @class = "form-control", rows = 5 })
                        @Html.ValidationMessageFor(model => model.attachmentsSpanish, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
                <div class="col-xs-4" id="1" name="mytext[]">
                    @Html.DropDownList("SpanishAttachmentSelector", new SelectList(SalesContract.getSpanishAttachmentsArray(), "Value", "Text"), new { @class = "form-control" })
                </div>
                <button id="BtnAgregarAtachmentEsp" class="btn btn-primary" type="button">Add Atachment</button>
            </div>

            <!--Attachments in english selector-->
            <div class="col-md-6">
                <fieldset class="form-group">
                    @Html.LabelFor(model => model.attachmentsEnglish, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.attachmentsEnglish, new { @class = "form-control", rows=5 })
                        @Html.ValidationMessageFor(model => model.attachmentsEnglish, "", new { @class = "text-danger" })
                    </div>
                </fieldset>
                <div class="col-xs-3" id="1" name="mytext[]">
                    @Html.DropDownList("EnglishAttachmentSelector", new SelectList(SalesContract.getEnglishAttachmentsArray(), "Value", "Text"), new { @class = "form-control" })
                </div>
                <button id="BtnAgrearAtachmentIng" class="btn btn-primary" type="button">Add Attachment</button>
            </div>
        </div>
        
        <!--Sales member selection view is generated-->
        @*if (Model != null && Model.contractSalesMembers != null) {
        @Html.Partial("Partial_SalesMember_Selection",Model)
    }
    else*@
        
            @Html.Partial("Partial_SalesMember_Selection")
        

            <div class="panel-body row">
                <input type="submit" value="Create" class="btn btn-success btn-lg col-md-2 col-md-offset-5">
            </div>
    </div>
}

@section Scripts {
    @*Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Scripts/jquery.maskedinput.js"></script>
    <script>
        initializeSalesMemberSelection();
    </script>
    <script>
        $("#OpcRolSelection .OpcRolSelection").change(function () {
            selectedRol = $(this).children("option").filter(":selected").text()
            if (selectedRol == '@Rol.SalesMembersTypesNames.OPC_IN_HOUSE') {
                $('#InHouseSalesMembersSelection').show()
                $('#OutHouseSalesMembersSelection').hide()
            } else if (selectedRol == '@Rol.SalesMembersTypesNames.OPC_OUT_HOUSE') {
                $('#InHouseSalesMembersSelection').hide()
                $('#OutHouseSalesMembersSelection').show()
            }
        })
        $('#OPCSalesMembers1').change(function () {
            selectedOPCMember = $(this).val();
            $('#SalesMembers[type=hidden]').val(selectedOPCMember);
        })
        $('#OPCSalesMembers2').change(function () {
            selectedOPCMember = $(this).val();
            $('#SalesMembers[type=hidden]').val(selectedOPCMember);
        })
    </script>
    <script>
    $("#CloserRolSelection .CloserRolSelection").change(function () {
            selectedRol = $(this).children("option").filter(":selected").text()
            if (selectedRol == '@Rol.SalesMembersTypesNames.CLOSER1') {
                $('#Closer1SalesMembersSelection').show()
                $('#Closer2SalesMembersSelection').hide()
            } else if (selectedRol == '@Rol.SalesMembersTypesNames.CLOSER2') {
                $('#Closer1SalesMembersSelection').hide()
                $('#Closer2SalesMembersSelection').show()
            }
        })
    $('#CloserSalesMembers1').change(function () {
            selectedOPCMember = $(this).val();
            $('#SalesMembersCloser[type=hidden]').val(selectedOPCMember);
        })
    $('#CloserSalesMembers2').change(function () {
        selectedOPCMember = $(this).val();
        $('#SalesMembersCloser[type=hidden]').val(selectedOPCMember);
    })

    $("#LinerRolSelection .LinerRolSelection").change(function () {
            selectedRol = $(this).children("option").filter(":selected").text()
            if (selectedRol == '@Rol.SalesMembersTypesNames.LINER1') {
                $('#Liner1SalesMembersSelection').show()
                $('#Liner2SalesMembersSelection').hide()
            } else if (selectedRol == '@Rol.SalesMembersTypesNames.LINER2') {
                $('#Liner1SalesMembersSelection').hide()
                $('#Liner2SalesMembersSelection').show()
            }
        })
    $('#LinerSalesMembers1').change(function () {
            selectedOPCMember = $(this).val();
            $('#SalesMembersLiner[type=hidden]').val(selectedOPCMember);
    })
    $('#LinerSalesMembers2').change(function () {
        selectedOPCMember = $(this).val();
        $('#SalesMembersLiner[type=hidden]').val(selectedOPCMember);
    })
    $('#typeOfFractionOther').mask('9/99');

    </script>
}


